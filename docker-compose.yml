version: '3.8'

services:
  postgres:
    image: postgis/postgis:15-3.3
    container_name: django_postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-django_db}
      POSTGRES_USER: ${DB_USER:-django_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-django_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-django_user} -d ${DB_NAME:-django_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - django_network

  redis:
    image: redis:7-alpine
    container_name: django_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - django_network

  web:
    build: .
    container_name: django_web
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python -m uvicorn config.asgi:application --host 0.0.0.0 --port 8000 --workers 4
      "
    volumes:
      - .:/app
      - static_volume:/app/config/staticfiles
      - ./config/media:/app/config/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=0
      - DJANGO_SETTINGS_MODULE=config.settings
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-django_db}
      - DB_USER=${DB_USER:-django_user}
      - DB_PASSWORD=${DB_PASSWORD:-django_password}
      - REDIS_URL=redis://redis:6379/0
      - REDIS_LOCATION=redis://redis:6379/1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - django_network

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: django_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/config/staticfiles
      - ./config/media:/app/config/media
    depends_on:
      - web
    networks:
      - django_network

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  django_network:
    driver: bridge